import pandas as pd
import numpy as np
import os
from scipy.signal import resample
import matplotlib.pyplot as plt

import matplotlib.pyplot as plt

# Set your folder path
folder_path = r"C:\Users\Abhay\Downloads\GestureCSVs"

# Get list of all CSV files in the folder
csv_files = [file for file in os.listdir(folder_path) if file.endswith('.csv')]

# Dictionary to hold filename and number of rows
gesture_lengths = {}

# Read each CSV and store its length
for file in csv_files:
    file_path = os.path.join(folder_path, file)
    df = pd.read_csv(file_path)
    gesture_lengths[file] = len(df)

# Convert to DataFrame for easy plotting
length_df = pd.DataFrame(list(gesture_lengths.items()), columns=['Gesture', 'Length'])

# Sort by length (optional)
length_df = length_df.sort_values(by='Length', ascending=False)

# Plot the bar graph
plt.figure(figsize=(14, 6))
plt.bar(length_df['Gesture'], length_df['Length'], color='skyblue')
plt.xticks(rotation=90)
plt.title("Number of Rows per Gesture File")
plt.xlabel("Gesture File")
plt.ylabel("Number of Rows")
plt.tight_layout()
plt.show()


#---------------------------------------------------Finding the specific lengths of every single tab--------------
import matplotlib.pyplot as plt

folder_path = r"C:\Users\Abhay\Downloads\GestureCSVs"

csv_files = [file for file in os.listdir(folder_path) if file.endswith('.csv')]

gesture_lengths = {}

for file in csv_files:
    file_path = os.path.join(folder_path, file)
    df = pd.read_csv(file_path)
    gesture_lengths[file] = len(df)

length_df = pd.DataFrame(list(gesture_lengths.items()), columns=['Gesture', 'Length'])
length_df = length_df.sort_values(by='Length', ascending=False)

# Print all lengths in descending order
print("Gesture lengths (descending order):")
print(length_df.to_string(index=False))

# Plot bar chart
plt.figure(figsize=(14, 6))
plt.bar(length_df['Gesture'], length_df['Length'], color='skyblue')
plt.xticks(rotation=90)
plt.title("Number of Rows per Gesture File")
plt.xlabel("Gesture File")
plt.ylabel("Number of Rows")
plt.tight_layout()
plt.show()
